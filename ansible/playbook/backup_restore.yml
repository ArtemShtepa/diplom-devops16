---
- name: Restore GitLab backup
  hosts: gitlab
  tasks:
    - name: Check backup file exists
      ansible.builtin.file:
        path: "files/{{ gitlab_backup }}"
        state: file
      delegate_to: localhost
      register: f_name
    - block:
      #- name: Copy GitLab secrets file
      #  ansible.builtin.copy:
      #    src: "gitlab-secrets.json"
      #    dest: "{{ gitlab_home }}/config/gitlab-secrets.json"
      #- name: Get permission of backups
      #  ansible.builtin.stat:
      #    path: "{{ gitlab_home }}/data/git-data"
      #  register: bp
      #- name: Copy GitLab backup file
      #  become: true
      #  ansible.builtin.copy:
      #    src: "{{ gitlab_backup }}"
      #    dest: "{{ gitlab_home }}/data/backups/latest_gitlab_backup.tar"
      #    owner: "{{ bp.stat.uid }}"
      #    group: "{{ bp.stat.gid }}"
      - name: Extract files from backup archive
        become: true
        ansible.builtin.unarchive:
          src: "files/{{ gitlab_backup }}"
          dest: "{{ gitlab_home }}"
      - name: Stop internal gitlab services
        ansible.builtin.command: "podman exec -ti gitlab gitlab-ctl stop {{ item }}"
        loop:
          - "puma"
          - "sidekiq"
        register: cmd_res
        changed_when: false
      - name: Restore GitLab backup with custom file name
        ansible.builtin.command: "podman exec -ti gitlab gitlab-backup restore BACKUP={{ gitlab_backup_custom }} force=yes"
        register: cmd_res
        retries: 5
        delay: 60
        until: cmd_res.rc == 0
        changed_when: false
        when:
          - gitlab_backup_custom is defined
          - gitlab_backup_custom != ""
      - name: Restore GitLab backup with standard file name
        ansible.builtin.command: "podman exec -ti gitlab gitlab-backup restore force=yes"
        register: cmd_res
        retries: 5
        delay: 60
        until: cmd_res.rc == 0
        changed_when: false
        when: gitlab_backup_custom is undefined or gitlab_backup_custom == ""
      - name: Restart Gitlab container
        containers.podman.podman_container:
          name: gitlab
          state: started
          force_restart: true
      # Удаление файлов из каталога резервныз копий GitLab
      - name: Empty GitLab backup directory
        become: true
        block:
        - name: Locating files
          ansible.builtin.find:
            path: "{{ gitlab_home }}/data/backups"
          register: f_list
        - name: Deleting files
          ansible.builtin.file:
            path: "{{ item.path }}"
            state: absent
          loop: "{{ f_list.files }}"
          when: f_list.files | length > 0
      when: f_name.state == "file"
...
