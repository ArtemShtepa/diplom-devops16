---
- name: Restore GitLab backup
  hosts: gitlab
  tasks:
    # Проверка существования файла резервной копии GitLab
    - name: Check backup file exists
      ansible.builtin.file:
        path: "files/{{ gitlab_backup }}"
        state: file
      delegate_to: localhost
      ignore_errors: true
      register: f_name
    - block:
      # Распаковка файлов из единого архива резервной копии с рабочей машины на машину GitLab
      - name: Extract files from backup archive
        become: true
        ansible.builtin.unarchive:
          src: "files/{{ gitlab_backup }}"
          dest: "{{ gitlab_home }}"
      # Остановка некоторых модулей GitLab, чтобы они не мешали восстановлению
      - name: Stop internal gitlab services
        ansible.builtin.command: "podman exec -ti gitlab gitlab-ctl stop {{ item }}"
        loop:
          - "puma"
          - "sidekiq"
        register: cmd_res
        changed_when: false
      # Запуск процесса восстановления GitLab из резервной копии с произвольным именем
      - name: Restore GitLab backup with custom file name
        ansible.builtin.command: "podman exec -ti gitlab gitlab-backup restore BACKUP={{ gitlab_backup_custom }} force=yes"
        register: cmd_res
        retries: 20
        delay: 15
        until: cmd_res.rc == 0
        changed_when: false
        when:
          - gitlab_backup_custom is defined
          - gitlab_backup_custom != ""
      # Запуск процесса восстановления GitLab из резервной копии со стандартным именем
      - name: Restore GitLab backup with standard file name
        ansible.builtin.command: "podman exec -ti gitlab gitlab-backup restore force=yes"
        register: cmd_res
        retries: 20
        delay: 15
        until: cmd_res.rc == 0
        changed_when: false
        when: gitlab_backup_custom is undefined or gitlab_backup_custom == ""
      # Перезапуск GitLab
      - name: Restart Gitlab container
        containers.podman.podman_container:
          name: gitlab
          state: started
          force_restart: true
        register: rst_res
        retries: 10
        delay: 6
        until: rst_res.changed
      # Удаление файлов из каталога резервных копий GitLab
      - name: Empty GitLab backup directory
        become: true
        block:
        - name: Locating files
          ansible.builtin.find:
            path: "{{ gitlab_home }}/data/backups"
          register: f_list
        - name: Deleting files
          ansible.builtin.file:
            path: "{{ item.path }}"
            state: absent
          loop: "{{ f_list.files }}"
          when: f_list.files | length > 0
      when: f_name.state == "file"
...
