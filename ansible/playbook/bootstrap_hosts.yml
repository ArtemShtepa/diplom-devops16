---
# Добавление в Inventory хостов kubernetes кластера
- name: Add kubernetes hosts
  tags:
    - sudo
  ansible.builtin.import_playbook: dynamic_inv.yml

# Установка пакета sudo и отключение запроса пароля для пользователя при повышении привилегий
# Данный play необходим только при использовании локальных машин - поэтому присутствует метка never
# Настраивает их подобно стандартным машинам Яндекс.Облака.
- name: Install sudo package with root
  hosts: all
  tags:
    - never
    - sudo
  vars:
    ansible_ssh_common_args: ""
  tasks:
    # Запоминание имени пользователя в переменную
    - name: Save user name
      ansible.builtin.set_fact:
        remote_user: "{{ ansible_user }}"
    # Исзменение пользователя в параметрах подключения Ansible на root
    - name: Change SSH user
      ansible.builtin.set_fact:
        ansible_user: root
    # Установка пакета sudo на целевой машине
    - name: Install sudo to allow become
      ansible.builtin.package:
        name: sudo
        state: present
    # Отключение запроса пароля пользователя при повышении привилегий
    - name: Disable password prompt
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/{{ remote_user }}"
        content: "{{ remote_user }} ALL=(ALL:ALL) NOPASSWD:ALL"
    # Обновление имени хоста для машинки и заодно проверка установки пакета sudo
    - name: Update hostname from playbook
      become: true
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

# Подготовка машинок
- name: Bootstrap machines
  hosts: all
  become: true
  tasks:
    # Запись в файл хостов списка машин кластера
    - name: Update hosts file
      ansible.builtin.blockinfile:
        dest: "{{ item }}"
        block: |
          {% for item in groups['all'] %}
          {{ hostvars[item]['ansible_host'] }} {{ item }}
          {% endfor %}
        state: present
      loop:
        - "/etc/hosts"
        - "/etc/cloud/templates/hosts.debian.tmpl"
    # Обновление кэша пакетного менеджера
    - name: Update package cache with universal module
      ansible.builtin.package:
        update_cache: true
    # Блок обновления всех пакетов - только для APT
    - block:
      # Обновление пакетов
      - name: Upgrade all packages
        ansible.builtin.apt:
          upgrade: dist
          force_apt_get: yes
      # Проверка нужно ли перезагружать машинку после обновления ядра
      - name: Check if a reboot is needed on all servers
        register: reboot_required_file
        ansible.builtin.stat:
          path: "/var/run/reboot-required"
          get_md5: false
      # Перезагрузка с ожиданием ответа
      - name: Reboot machine if kernel updated
        reboot:
          msg: "Reboot initiated by Ansible for kernel updates"
          connect_timeout: 180
          reboot_timeout: 120
          pre_reboot_delay: 10
          post_reboot_delay: 20
          test_command: uptime
        when: reboot_required_file.stat.exists
      when: ansible_pkg_mgr == "apt"
...
