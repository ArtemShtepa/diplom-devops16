---
- name: Install prerequirements
  hosts: gitlab
  tasks:
    - name: Create Gitlab directories
      ansible.builtin.file:
        path: "{{ gitlab_home }}/{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - ""
        - "data"
        - "config"
        - "logs"
    - name: Create GitLab configuration file
      ansible.builtin.template:
        src: "gitlab.rb.jinja2"
        dest: "{{ gitlab_home }}/config/gitlab.rb"
    - name: Copy GitLab secrets file
      ansible.builtin.copy:
        src: "gitlab-secrets.json"
        dest: "{{ gitlab_home }}/config/gitlab-secrets.json"
      when:
        - gitlab_backup is defined
        - gitlab_backup != ""
    - name: Run Gitlab container
      containers.podman.podman_container:
        name: gitlab
        image: "docker.io/gitlab/gitlab-ce:{{ gitlab_version }}-ce.0"
        state: started
        restart_policy: "always"
        generate_systemd:
          container_prefix: "podman"
          path: "~/.config/systemd/user/"
          restart_policy: "always"
        publish:
          - "22048:22"
          - "{{ gitlab_port }}:8081"
        volume:
          - "{{ gitlab_home }}/data:/var/opt/gitlab"
          - "{{ gitlab_home }}/logs:/var/log/gitlab"
          - "{{ gitlab_home }}/config:/etc/gitlab"
          - "/etc/timezone:/etc/timezone:ro"
          - "/etc/localtime:/etc/localtime:ro"
    - name: Wait for necessary directory
      ansible.builtin.wait_for:
        path: "{{ gitlab_home }}/{{ item }}"
        state: present
      loop:
        - "data/backups"
        - "data/git-data"
    - block:
      - name: Get permission of backups
        ansible.builtin.stat:
          path: "{{ gitlab_home }}/data/git-data"
        register: bp
      - name: Copy GitLab backup file
        become: true
        ansible.builtin.copy:
          src: "{{ gitlab_backup }}"
          dest: "{{ gitlab_home }}/data/backups/latest_gitlab_backup.tar"
          owner: "{{ bp.stat.uid }}"
          group: "{{ bp.stat.gid }}"
      - name: Stop internal gitlab services
        ansible.builtin.command: "podman exec -ti gitlab gitlab-ctl stop {{ item }}"
        loop:
          - "puma"
          - "sidekiq"
        register: cmd_res
        changed_when: false
      - name: Restore GitLab backup
        ansible.builtin.command: "podman exec -ti gitlab gitlab-backup restore BACKUP=latest force=yes"
        register: cmd_res
        retries: 5
        delay: 60
        until: cmd_res.rc == 0
        changed_when: false
      - name: Restart Gitlab container
        containers.podman.podman_container:
          name: gitlab
          state: started
          force_restart: true
      when:
        - gitlab_backup is defined
        - gitlab_backup != ""
    - block:
      - name: Get initial password
        ansible.builtin.command: "cat {{ gitlab_home }}/config/initial_root_password"
        ignore_errors: true
        changed_when: false
        register: cmd_res
      - name: Print root password
        ansible.builtin.debug:
          var: cmd_res.stdout
        when: cmd_res.rc == 0
      when: gitlab_backup is undefined or gitlab_backup == ""
    - name: Run as service
      ansible.builtin.systemd:
        name: podman-gitlab
        scope: user
        enabled: true
...
