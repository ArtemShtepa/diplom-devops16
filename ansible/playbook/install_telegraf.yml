---
- name: Install prerequirements
  hosts: telegraf
  tasks:
    # Создание директории расположения конфигурационного файла Telegraf
    - name: Create Telegraf directories
      ansible.builtin.file:
        path: "{{ telegraf_home }}"
        state: directory
    # Копирование подготовленного ранее конфигурационного файла Telegraf
    - name: Copy Telegraf configuration file
      ansible.builtin.copy:
        src: "_telegraf.conf"
        dest: "{{ telegraf_home }}/telegraf.conf"
      register: cnf_res
    # Запуск контейнера с Telegraf с генерированием service файла
    - name: Run Telegraf container
      containers.podman.podman_container:
        name: telegraf
        image: "docker.io/telegraf:{{ telegraf_version }}"
        state: started
        user: "telegraf"
        restart_policy: "always"
        recreate: "{{ cnf_res.changed }}"
        generate_systemd:
          container_prefix: "podman"
          path: "~/.config/systemd/user/"
          restart_policy: "always"
        hostname: "{{ inventory_hostname }}"
        env:
            HOST_ETC: /hostfs/etc
            HOST_PROC: /hostfs/proc
            HOST_SYS: /hostfs/sys
            HOST_VAR: /hostfs/var
            HOST_RUN: /hostfs/run
            HOST_MOUNT_PREFIX: /hostfs
        volumes:
            - "{{ telegraf_home }}/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
            #- /sys:/hostfs/sys:ro
            #- /proc:/hostfs/proc:ro
            #- /etc:/hostfs/etc:ro
            - "/:/hostfs:ro"
        network: host
    # Принудительный перезапуск контейнера Telegraf если конфигурационный файл изменился
    - name: Restart Telegraf container
      containers.podman.podman_container:
        name: telegraf
        state: started
        force_restart: true
      register: rst_res
      retries: 10
      delay: 6
      until: rst_res.changed
      when: cnf_res.changed
    # Активация запуска Telegraf при старте машинки
    - name: Run as service
      ansible.builtin.systemd:
        name: podman-telegraf
        scope: user
        enabled: true
...
