stages:
  - compile
  - build
  - deploy
  - clean

variables:
  #DFILE: "full"
  DFILE: "art"
  CLUSTER_ENV: "stage"
  VERSION_CMD: "git describe --always --tags"

Compile:
  stage: compile
  #only:
  #  changes:
  #    - "**/*.go"
  variables:
  #  DFILE: "art"
    GIT_STRATEGY: clone
  tags:
    - linux
    - podman
  script:
    - $VERSION_CMD > __version__
    - echo "Compiling application v$(cat __version__)..."
    - podman run --rm -v ./src:/src docker.io/golang:alpine sh -c "cd /src && go mod init apiserver && go mod tidy && go build -ldflags=\"-X 'main.Version=$(cat __version__)'\""
  artifacts:
    paths:
      - src/apiserver

Build image:
  stage: build
  when: on_success
  needs:
    - Compile
  dependencies:
    - Compile
  tags:
    - podman
  script:
    - echo "Building image with strategy $DFILE..."
    - $VERSION_CMD > __version__
    - bash build.sh --build-$DFILE

Push image:
  stage: build
  when: manual
  needs:
    - Build image
  tags: ['podman']
  script:
    - echo "Pushing image to registry..."
    - $VERSION_CMD > __version__
    - podman login docker.io -u $(echo $GH_USER | base64 -d) -p $(echo $GH_PASSWORD | base64 -d)
    - bash build.sh --push
    - podman logout --all

Deploy STAGE:
  stage: deploy
  when: on_success
  needs:
    - Push image
  tags: ['podman']
  script:
    - export APP_IMAGE_TAG=$($VERSION_CMD)
    - echo "Deploying application v$APP_IMAGE_TAG for $CLUSTER_ENV..."
    - bash build.sh --deploy

Deploy PROD:
  stage: deploy
  when: manual
  needs:
    - Push image
  rules:
    - if: $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+(\.[0-9]+|)$/
      variables:
        CLUSTER_ENV: "prod"
        APP_IMAGE_TAG: $CI_COMMIT_TAG
  tags: ['podman']
  script:
    - echo "Deploying application v$APP_IMAGE_TAG for $CLUSTER_ENV..."
    - bash build.sh --deploy

Clean STAGE:
  stage: clean
  when: manual
  needs:
    - Deploy STAGE
  tags: ['podman']
  script:
    - export APP_IMAGE_TAG=$($VERSION_CMD)
    - echo "Destroy application v$APP_IMAGE_TAG at $CLUSTER_ENV..."
    - bash build.sh --clean

Clean PROD:
  stage: clean
  when: manual
  needs:
    - Deploy PROD
  rules:
    - if: $CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+(\.[0-9]+|)$/
      variables:
        CLUSTER_ENV: "prod"
        APP_IMAGE_TAG: $CI_COMMIT_TAG
  tags: ['podman']
  script:
    - echo "Destroy application v$APP_IMAGE_TAG at $CLUSTER_ENV..."
    - bash build.sh --clean
